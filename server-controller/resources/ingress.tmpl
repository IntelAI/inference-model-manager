apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: "{{.Spec.EndpointName}}"
  namespace: "{{.ObjectMeta.Namespace}}"
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/grpc-backend: "true"
    nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
    nginx.ingress.kubernetes.io/auth-tls-secret: "{{.ObjectMeta.Namespace}}/ca-cert-secret"
    nginx.ingress.kubernetes.io/auth-tls-verify-depth: "1"
    nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "false"
    nginx.ingress.kubernetes.io/proxy-body-size: 8m
    allowed-values: "CN={{.Spec.SubjectName}}"
  labels:
    id: "{{.Spec.EndpointName}}"
    endpoint: "{{.Spec.EndpointName}}"
  ownerReferences:
  - apiVersion: {{.APIVersion}}
    kind: {{.Kind}}
    name: {{.Name}}
    uid: {{.UID}}
    controller: {{.Controller}}
    blockOwnerDeletion: {{.BlockOwnerDeletion}}
spec:
  rules:
  - host: {{.Spec.EndpointName}}-{{.ObjectMeta.Namespace}}.{{ GlobalTemplateValue "platformDomain" }}
    http:
      paths:
      - backend:
          serviceName: "{{.Spec.EndpointName}}"
          servicePort: 9000
  tls:
  - hosts:
    - {{.Spec.EndpointName}}-{{.ObjectMeta.Namespace}}.{{ GlobalTemplateValue "platformDomain" }}
    secretName: tls-secret
