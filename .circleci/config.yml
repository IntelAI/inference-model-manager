version: 2.0
jobs:
  build:
    docker:
      - image: circleci/python:3.6.6-jessie-browsers
    working_directory: ~/inferno-platform
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Create k8s cluster
          command: |
            echo "${GOOGLE_AUTH_IN}" | base64 -d > /tmp/gcp-key.json
            export PR_NR=`basename ${CIRCLE_PULL_REQUEST}`
            export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)"
            echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
            curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
            sudo apt-get update && sudo apt-get install -y google-cloud-sdk
            sudo apt-get install kubectl
            sudo apt-get update && sudo apt-get --only-upgrade install kubectl google-cloud-sdk google-cloud-sdk-app-engine-grpc google-cloud-sdk-pubsub-emulator \
            google-cloud-sdk-app-engine-go google-cloud-sdk-cloud-build-local google-cloud-sdk-datastore-emulator google-cloud-sdk-app-engine-python google-cloud-sdk-cbt \
            google-cloud-sdk-bigtable-emulator google-cloud-sdk-app-engine-python-extras google-cloud-sdk-datalab google-cloud-sdk-app-engine-java
            gcloud auth activate-service-account --key-file /tmp/gcp-key.json
            gcloud config set project "${GOOGLE_PROJECT_ID}"
            gcloud container clusters create inferno-${CIRCLE_BRANCH}-${PR_NR} --zone us-west1-a --num-nodes 3 --machine-type "n1-standard-2" --min-cpu-platform "Intel Skylake"
            gcloud container clusters get-credentials inferno-${CIRCLE_BRANCH}-${PR_NR} --zone us-west1-a --project "${GOOGLE_PROJECT_ID}"
            kubectl create serviceaccount --namespace kube-system tiller
            kubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:tiller
            curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get > get_helm.sh
            chmod 700 get_helm.sh
            ./get_helm.sh
            helm init --service-account tiller --upgrade
            sleep 20
      - run:
          name: Check management api images version
          command: |
            cd ~/inferno-platform/
            export TAG=$(find management/ -type f -exec sha256sum {} \; | cut -d " " -f1 | sort | xargs echo | sha256sum | cut -d " " -f1)
            export TAG_EXISTS=$(gcloud container images list-tags gcr.io/constant-cubist-173123/management-api | grep $TAG)
            echo $TAG
            echo $TAG_EXISTS
            cd ~/inferno-platform/management
            if [ -z "$TAG_EXISTS" ]; then
               make circleci
            else
               echo "image already in registry - not rebuilding"
            fi
      - run:
          name: Download dependencies and deploy platfrom
          command: |
            export MGMT_TAG=$(find management/ -type f -exec sha256sum {} \; | cut -d " " -f1 | sort | xargs echo | sha256sum | cut -d " " -f1)
            cd ~/inferno-platform/helm-deployment/
            helm dep up .
            helm install --set management-api-chart.tag=$MGMT_TAG .
            sleep 150
      - run:
          name: Run tests
          command: |
            export ING_IP=`kubectl get ing -o=jsonpath='{.items..status.loadBalancer.ingress..ip}'`
            export ING_DOMAIN=`kubectl get ing -o=jsonpath='{.items..spec.tls..hosts}' | sed 's/[][]//g'`
            echo "${ING_IP} ${ING_DOMAIN}" | sudo tee -a /etc/hosts
            cd ~/inferno-platform/tests
            python3 -m venv .venv
            . .venv/bin/activate
            pip install -r requirements.txt
            . run_test.sh
      - run:
          name: Delete cluster or wait 30 minutes
          command: |
            cd ~/inferno-platform
            export IF_DEBUG=`git log -1 --pretty=%B | grep "[[please debug me]]"`
            export PR_NR=`basename ${CIRCLE_PULL_REQUEST}`
            if [-n "$IF_DEBUG" ]; then
               sleep 30m
            fi
            echo y | gcloud container clusters delete inferno-${CIRCLE_BRANCH}-${PR_NR} --zone us-west1-a
workflows:
  version: 2
  deploy-test:
    jobs:
      - build
